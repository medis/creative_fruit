{"version":3,"sources":["app.scss","utils/_variables.scss","base/_global.scss","../../../node_modules/susy/sass/susy/output/support/_rem.scss","../../../node_modules/susy/sass/susy/language/susy/_container.scss","../../../node_modules/susy/sass/susy/output/support/_clearfix.scss","../../../node_modules/breakpoint-sass/stylesheets/_breakpoint.scss","vendors/_font_face.scss","base/_typographic.scss","components/_admin_menu.scss","components/_header.scss","../../../node_modules/susy/sass/susy/language/susy/_span.scss","../../../node_modules/susy/sass/susy/output/shared/_direction.scss","components/_carousel.scss","../../../node_modules/susy/sass/susy/language/susy/_gutters.scss","components/_messages.scss","components/_embed.scss","pages/_home.scss","pages/_about.scss","pages/_work.scss","pages/_contact.scss","layout/_header.scss","layout/_footer.scss"],"names":[],"mappings":"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;ERxIpB,YSA4D;ETA5D,eQ+EqB;ER/ErB,gBQkFoB,EQ7FvB;EbwDG;IahEJ;MhBmBI,sBQwIoB;MRxIpB,YSA4D;MTA5D,4BW4DwB,EKvE3B,EAAA;EbwDG;IahEJ;MhBmBI,sBQwIoB;MRxIpB,YSA4D;MTA5D,4BW4DwB,EKvE3B,EAAA;;AACD;EhBUI,YQwIoB;ERxIpB,YSA4D;ETA5D,eQ+EqB;ER/ErB,gBQkFoB,EQ9EvB;EbyCG;IavDJ;MhBUI,sBQwIoB;MRxIpB,YSA4D,EOI/D,EAAA;EbyCG;IavDJ;MhBUI,sBQwIoB;MRxIpB,YSA4D,EOI/D,EAAA;EAdD;IASI,eAAe,EAChB;EACC;IACA,oBAAoB,EACrB;;ACtBH;EjBmBI,YQwIoB;ERxIpB,YSA4D;ETA5D,eQ+EqB;ER/ErB,gBQkFoB,ES5FrB;EduDC;Ic/DE;MjBkBF,sBQwIoB;MRxIpB,YSA4D;MTA5D,4BW4DwB,EMtEzB,EAAA;EduDC;IchEJ;MjBmBI,sBQwIoB;MRxIpB,YSA4D;MTA5D,4BW4DwB,EMtEzB,EAAA;;AAGD;EjBOE,YQwIoB;ERxIpB,YSA4D;ETA5D,eQ+EqB;ER/ErB,gBQkFoB,ESjFrB;Ed4CC;IcrDJ;MjBQI,sBQwIoB;MRxIpB,YSA4D;MTA5D,4BW4DwB,EM3DzB,EAAA;Ed4CC;IcpDF;MjBOE,sBQwIoB;MRxIpB,YSA4D;MTA5D,4BW4DwB,EM3DzB,EAAA;;AATH;EjBQI,YQwIoB;ERxIpB,YSA4D;ETA5D,eQ+EqB;ER/ErB,gBQkFoB,ESxErB;EdmCC;Ic3CE;MjBFF,sBQwIoB;MRxIpB,YSA4D,EQU7D,EAAA;EdmCC;IcrDJ;MjBQI,sBQwIoB;MRxIpB,YSA4D,EQU7D,EAAA;;AAGgB;EACf,YAAY;EACZ,uBAAuB,EACxB;;AACD;EACE,cAAc,EACf;;AAPH;EASI,mBAAmB,EACpB;;AACD;EACE,mBAAmB;EACnB,WAAW;EACX,SAAS;EACT,gBAAgB;EAChB,eAAe,EAChB;;AAGH;EACE,wBAAwB,EACzB;;ApBHD;;GAEG;AqBpDH;EACE,sBAAsB;EACtB,aAAa;EACb,iBAAiB;EACjB,mBAAmB;EACnB,4BAA4B;EAC5B,yBAAqB,EAwEtB;EA9ED;IAQI,cAAc,EAIf;IfoDC;MezDA;QAGE,eAAe,EAElB,EAAA;EAZH;IAeI,mCAAmC;IACnC,iBAAiB;IACjB,YAAY;IACZ,oBAAoB;IACpB,YAAY,EACb;EACD;IACE,mBAAmB;IACnB,OAAO;IACP,UAAU;IACV,UAAU;IACV,WAAW;IACX,iBAAiB;IACjB,YAAY,EACb;EA7BH;IA+BI,eAAe;IACf,aAAa;IACb,eAAe;IACf,YAAY,EAcb;IfgBC;MelCD;QAMG,YAAY;QlBjBd,sBQwIoB;QRxIpB,YSA4D;QTA5D,4BW4DwB,EO/BzB,EAAA;IfgBC;MehEJ;QlBmBI,sBQwIoB;QRxIpB,YSA4D;QTA5D,4BW4DwB,EO/BzB,EAAA;IANC;MACE,YAAY;MACZ,aAAa;MAEb,sBAAsB,EACvB;EA/CL;IlBmBI,sBQwIoB;IRxIpB,aSAuE;ITAvE,gBQkFoB,EUxBrB;IA3BC;MACE,UAAU;MACV,WAAW;MACX,iBAAiB;MACjB,mBAAmB;MACnB,SAAS;MACT,4BAAqB;MACrB,SAAS,EAkBV;MA3EL;QA2DQ,gBAAgB;QAChB,mBAAmB,EAcpB;QAhBD;UAII,gBAAgB,EACjB;QA/DT;UAiEU,qCAAqC;UACrC,sBAAsB;UACtB,eAAe;UACf,eAAe,EAKhB;UATD;YAMI,eAAe;YACf,6BAA6B,EAC9B;;AAOX;EACE,eAAe;EACf,aAAa;EACb,mBAAmB,EAapB;Ef/BG;IeoBA;MAEI,WAAW,EAEd,EAAA;EATL;IAYQ,oBAAoB,EACrB;;AAIoE;EACzE,oBAAoB,EACrB;;AACD;EACE,wBAAwB,EA4EzB;EA7ED;IAGI,YAAY,EACb;EACD;IACE,UAAU,EAaX;IAnBH;MAQM,eAAe;MACf,qCAAqC,EAStC;MAXE;QAMC,iBAAiB;QACjB,wBAAwB;QACxB,eAAe;QACf,6BAA6B,EAC9B;EAGL;IACE,wBAAwB;IACxB,UAAU;IACV,sBAAsB;IACtB,kBAAkB;IAGlB,iBAAiB;IACjB,eAAe,EAChB;EA7BH;IA+BI,eAAe;IACf,mBAAmB;IAGnB,iBAAiB;IACjB,YAAY;IACZ,YAAY;IAIZ,mBAAmB;IACnB,mBAAmB;IACnB,oBAAoB,EACrB;EAEmB;IAChB,mBAAmB,EACpB;EAhDL;IAkDM,eAAe;IAKf,yBAAiB;IACjB,oBAAoB,EACrB;EAzDL;IA2DM,eAAe;IAKf,0BAAiB;IACjB,cAAc,EACf;EAlEL;IAqEE,cAAa,EACb;EACG;IACH,eAAc,EACd;Ef5GE;IemCJ;MA2EI,cAAa,EAEhB,EAAA;;AChLD;EACE,oBAAoB;EACpB,mBAAmB;EACnB,8BAA8B;EAC9B,eAAe;EACf,gBAAgB,EACjB;;AtBiDD;;GAEG","file":"app.css","sourcesContent":["// @import \"node_modules/bootstrap-sass/assets/stylesheets/bootstrap\";\n\n/**\n * Import Susy.\n * http://susy.oddbird.net/\n */\n@import \"../../../node_modules/susy/sass/susy\";\n/**\n * Import Breakpoint\n * http://breakpoint-sass.com/\n */\n@import \"../../../node_modules/breakpoint-sass/stylesheets/breakpoint\";\n\n$susy: (\n  columns: 12,\n  math: fluid,\n  gutters: 1/4,\n  global-box-sizing: border-box\n);\n\n/**\n * The 7-1 Pattern by Hugo Giraudel\n * http://sass-guidelin.es/#the-7-1-pattern\n */\n\n /**\n  * Contains global mixins, functions, helper selectors, etc.\n  */\n @import 'utils/module';\n \n/**\n * Contains 3rd-party styles, mixins, etc.\n */\n@import 'vendors/module';\n\n/**\n * Contains global styles, such as resets, typography, colors, etc.\n */\n@import 'base/module';\n\n/**\n * Contains each self-contained component in its own .scss partial\n */\n@import 'components/module';\n\n/**\n * Contains page-specific styling, if necessary.\n */\n@import 'pages/module';\n\n/**\n * Contains styling for larger layout components; e.g. nav, header, footer, etc.\n */\n@import 'layout/module';\n\n/**\n * Contains styling for different themes.\n */\n@import 'themes/module';\n","/**\n * Variables File.\n */\n\n/* Breakpoints */\n$tablet: 48em;\n$desktop: 64em;\n\n$body-color: #363535;\n$body-font: 'Nexa Light';\n$heading-font: 'Nexa Light';\n","html {\n  height: 100%;\n  width: 100%;\n}\nbody {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  display: table;\n  table-layout: fixed;\n  height: 100%;\n  width: 100%;\n}\nimg {\n  max-width: 100%;\n  height: auto;\n}\n.visually-hidden {\n  position: absolute !important;\n  clip: rect(1px, 1px, 1px, 1px);\n  overflow: hidden;\n  height: 1px;\n  width: 1px;\n  word-wrap: normal;\n}\n\na {\n  color: $body-color;\n  text-decoration: underline;\n  &:focus, &:hover {\n    text-decoration: none;\n    color: #c21924;\n  }\n}\n\n.container {\n  @include container;\n}\n\n.form-item-hidden {\n  display: none;\n}\nform {\n  .form-item {\n    position: relative;\n    margin: 10px 0;\n    input[type=\"text\"], textarea {\n      line-height: 1.2;\n    }\n  }\n}\n\ninput[type=\"submit\"].button {\n  display: inline-block;\n}\n\n.inner-container {\n  margin: 0 3%;\n  @include breakpoint($tablet) {\n    margin: 0 5%;\n  }\n  @include breakpoint($desktop) {\n    margin: 0 10%;\n  }\n}\n\n.clearfix:after {\n  content: \"\";\n  display: table;\n  clear: both;\n}\n\n.page-row {\n  display: table-row;\n  height: 1px;\n}\n.page-row.page-row-expanded {\n  height: 100%;\n}\n\n.form-item-title,\n.form-item-video {\n  width: 100%;\n}\n\n@include font-face('NuevaStd-Italic', '../fonts/NuevaStd-Italic');\n@include font-face('Nexa Light', '../fonts/Nexa Light');\n","// rem Support\n// ===========\n\n// rem\n// ---\n// Check for an existing support mixin, or output directly.\n// - $prop  : <css property>\n// - $val   : <css value>\n@mixin susy-rem(\n  $prop,\n  $val\n) {\n  $_reqs: (\n    variable: rhythm-unit rem-with-px-fallback,\n    mixin: rem,\n  );\n  @if susy-support(rem, $_reqs, $warn: false) and $rhythm-unit == rem {\n    @include rem($prop, $val);\n  } @else {\n    #{$prop}: $val;\n  }\n}\n","// Container Syntax\n// ================\n\n// Container [mixin]\n// -----------------\n// Set a container element\n// - [$layout]  : <settings>\n@mixin container(\n  $layout: $susy\n) {\n  $inspect    : $layout;\n  $layout     : parse-grid($layout);\n\n  $_width     : get-container-width($layout);\n  $_justify   : parse-container-position(susy-get(container-position, $layout));\n  $_property  : if(susy-get(math, $layout) == static, width, max-width);\n\n  $_box       : susy-get(box-sizing, $layout);\n\n  @if $_box {\n    @include output((box-sizing: $_box));\n  }\n\n  @include susy-inspect(container, $inspect);\n  @include float-container($_width, $_justify, $_property);\n  @include show-grid($layout);\n}\n\n// Container [function]\n// --------------------\n// Return container width\n// - [$layout]  : <settings>\n@function container(\n  $layout: $susy\n) {\n  $layout: parse-grid($layout);\n  @return get-container-width($layout);\n}\n\n// Get Container Width\n// -------------------\n// Calculate the container width\n// - [$layout]: <settings>\n@function get-container-width(\n  $layout: $susy\n) {\n  $layout         : parse-grid($layout);\n  $_width         : susy-get(container, $layout);\n  $_column-width  : susy-get(column-width, $layout);\n  $_math          : susy-get(math, $layout);\n\n  @if not($_width) or $_width == auto {\n    @if valid-column-math($_math, $_column-width) {\n      $_columns   : susy-get(columns, $layout);\n      $_gutters   : susy-get(gutters, $layout);\n      $_spread    : if(is-split($layout), wide, narrow);\n      $_width     : susy-sum($_columns, $_gutters, $_spread) * $_column-width;\n    } @else {\n      $_width: 100%;\n    }\n  }\n\n  @return $_width;\n}\n\n// Parse Container Position\n// ------------------------\n// Parse the $container-position into margin values.\n// - [$justify]   : left | center | right | <length> [<length>]\n@function parse-container-position(\n  $justify: map-get($susy-defaults, container-position)\n) {\n  $_return: if($justify == left, 0, auto) if($justify == right, 0, auto);\n\n  @if not(index(left right center, $justify)) {\n    $_return: nth($justify, 1);\n    $_return: $_return if(length($justify) > 1, nth($justify, 2), $_return);\n  }\n\n  @return $_return;\n}\n","// Susy Fallback Clearfix\n// ======================\n\n\n// Clearfix\n// --------\n// Check for an existing support mixin, or provide a simple fallback.\n@mixin susy-clearfix {\n  @if susy-support(clearfix, (mixin: clearfix)) {\n    @include clearfix;\n  } @else {\n    &:after {\n      content: \" \";\n      display: block;\n      clear: both;\n    }\n  }\n}\n","//////////////////////////////\n// Default Variables\n//////////////////////////////\n$Breakpoint-Settings: (\n  'default media': all,\n  'default feature': min-width,\n  'default pair': width,\n\n  'force all media type': false,\n  'to ems': false,\n  'transform resolutions': true,\n\n  'no queries': false,\n  'no query fallbacks': false,\n\n  'base font size': 16px,\n\n  'legacy syntax': false\n);\n\n$breakpoint: () !default;\n\n//////////////////////////////\n// Imports\n//////////////////////////////\n@import \"breakpoint/settings\";\n@import 'breakpoint/context';\n@import 'breakpoint/helpers';\n@import 'breakpoint/parsers';\n@import 'breakpoint/no-query';\n\n@import 'breakpoint/respond-to';\n\n@import \"breakpoint/legacy-settings\";\n\n//////////////////////////////\n// Breakpoint Mixin\n//////////////////////////////\n\n@mixin breakpoint($query, $no-query: false) {\n  @include legacy-settings-warning;\n\n  // Reset contexts\n  @include private-breakpoint-reset-contexts();\n\n  $breakpoint: breakpoint($query, false);\n\n  $query-string: map-get($breakpoint, 'query');\n  $query-fallback: map-get($breakpoint, 'fallback');\n\n  $private-breakpoint-context-holder: map-get($breakpoint, 'context holder') !global;\n  $private-breakpoint-query-count: map-get($breakpoint, 'query count') !global;\n\n  // Allow for an as-needed override or usage of no query fallback.\n  @if $no-query != false {\n    $query-fallback: $no-query;\n  }\n\n  @if $query-fallback != false {\n    $context-setter: private-breakpoint-set-context('no-query', $query-fallback);\n  }\n\n  // Print Out Query String\n  @if not breakpoint-get('no queries') {\n    @media #{$query-string} {\n      @content;\n    }\n  }\n\n  @if breakpoint-get('no query fallbacks') != false or breakpoint-get('no queries') == true {\n\n    $type: type-of(breakpoint-get('no query fallbacks'));\n    $print: false;\n\n    @if ($type == 'bool') {\n      $print: true;\n    }\n    @else if ($type == 'string') {\n      @if $query-fallback == breakpoint-get('no query fallbacks') {\n        $print: true;\n      }\n    }\n    @else if ($type == 'list') {\n      @each $wrapper in breakpoint-get('no query fallbacks') {\n        @if $query-fallback == $wrapper {\n          $print: true;\n        }\n      }\n    }\n\n    // Write Fallback\n    @if ($query-fallback != false) and ($print == true) {\n      $type-fallback: type-of($query-fallback);\n\n      @if ($type-fallback != 'bool') {\n        #{$query-fallback} & {\n          @content;\n        }\n      }\n      @else {\n        @content;\n      }\n    }\n  }\n\n  @include private-breakpoint-reset-contexts();\n}\n\n\n@mixin mq($query, $no-query: false) {\n  @include breakpoint($query, $no-query) {\n    @content;\n  }\n}\n","//https://gist.github.com/jonathantneal/d0460e5c2d5d7f9bc5e6\n\n// =============================================================================\n// String Replace\n// =============================================================================\n\n@function str-replace($string, $search, $replace: \"\") {\n\t$index: str-index($string, $search);\n\n\t@if $index {\n\t\t@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\n\t}\n\n\t@return $string;\n}\n\n// =============================================================================\n// Font Face\n// =============================================================================\n\n@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {\n\t$src: null;\n\n\t$extmods: (\n\t\teot: \"?\",\n\t\tsvg: \"#\" + str-replace($name, \" \", \"_\")\n\t);\n\n\t$formats: (\n\t\totf: \"opentype\",\n\t\tttf: \"truetype\"\n\t);\n\n\t@each $ext in $exts {\n\t\t$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);\n\t\t$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);\n\t\t$src: append($src, url(quote($path + \".\" + $extmod)) format(quote($format)), comma);\n\t}\n\n\t@font-face {\n\t\tfont-family: quote($name);\n\t\tfont-style: $style;\n\t\tfont-weight: $weight;\n\t\tsrc: $src;\n\t}\n}\n","// Typographic v2.9.2 - https://github.com/corysimmons/typographic\n\n\n// Ratios\n\n$minor-second   : 1.067;\n$major-second   : 1.125;\n$minor-third    : 1.2;\n$major-third    : 1.25;\n$perfect-fourth : 1.333;\n$aug-fourth     : 1.414;\n$perfect-fifth  : 1.5;\n$minor-sixth    : 1.6;\n$golden         : 1.618;\n$major-sixth    : 1.667;\n$minor-seventh  : 1.778;\n$major-seventh  : 1.875;\n$octave         : 2;\n$major-tenth    : 2.5;\n$major-eleventh : 2.667;\n$major-twelfth  : 3;\n$double-octave  : 4;\n\n\n// Sans-serif\n\n$calibri       : 'Calibri', 'Candara', 'Segoe', 'Segoe UI', 'Optima', 'Arial', 'sans-serif';\n$candara       : 'Candara', 'Calibri', 'Segoe', 'Segoe UI', 'Optima', 'Arial', 'sans-serif';\n$courier       : 'Courier New', 'Courier', 'Lucida Sans Typewriter', 'Lucida Typewriter', 'monospace';\n$franklin      : 'Franklin Gothic Medium', 'Arial', 'sans-serif';\n$futura        : 'Futura', 'Trebuchet MS', 'Arial', 'sans-serif';\n$geneva        : 'Geneva', 'Tahoma', 'Verdana', 'sans-serif';\n$gill-sans     : 'Gill Sans', 'Gill Sans MT', 'Calibri', 'sans-serif';\n$helvetica     : 'Helvetica Neue', 'Helvetica', 'Arial', 'sans-serif';\n$lucida-grande : 'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', 'Geneva', 'Verdana', 'sans-serif';\n$optima        : 'Optima', 'Segoe', 'Segoe UI', 'Candara', 'Calibri', 'Arial', 'sans-serif';\n$segoe         : 'Segoe', 'Segoe UI', 'Helvetica Neue', 'Arial', 'sans-serif';\n$tahoma        : 'Tahoma', 'Geneva', 'Verdana', 'sans-serif';\n$trebuchet     : 'Trebuchet MS', 'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', 'Tahoma', 'sans-serif';\n$verdana       : 'Verdana', 'Geneva', 'sans-serif';\n\n\n// Serif\n\n$antiqua       : 'Book Antiqua', 'Palatino', 'Palatino Linotype', 'Palatino LT STD', 'Georgia', 'serif';\n$baskerville   : 'Baskerville', 'Baskerville old face', 'Hoefler Text', 'Garamond', 'Times New Roman', 'serif';\n$bodoni        : 'Bodoni MT', 'Didot', 'Didot LT STD', 'Hoefler Text', 'Garamond', 'Times New Roman', 'serif';\n$cambria       : 'Cambria', 'Georgia', 'serif';\n$caslon        : 'Big Caslon', 'Book Antiqua', 'Palatino Linotype', 'Georgia', 'serif';\n$constantia    : 'Constantia', 'Palatino', 'Palatino Linotype', 'Palatino LT STD', 'Georgia', 'serif';\n$didot         : 'Didot', 'Didot LT STD', 'Hoefler Text', 'Garamond', 'Times New Roman', 'serif';\n$garamond      : 'Garamond', 'Baskerville', 'Baskerville Old Face', 'Hoefler Text', 'Times New Roman', 'serif';\n$goudy         : 'Goudy Old Style', 'Garamond', 'Big Caslon', 'Times New Roman', 'serif';\n$hoefler       : 'Hoefler Text', 'Baskerville old face', 'Garamond', 'Times New Roman', 'serif';\n$lucida-bright : 'Lucida Bright', 'Georgia', 'serif';\n$palatino      : 'Palatino', 'Palatino Linotype', 'Palatino LT STD', \"Book Antiqua\", 'Georgia', 'serif';\n\n\n// Settings\n\n$line-height-ratio   : 1.75 !default;\n$heading-ratio       : $golden !default;\n$body-font           : $helvetica !default;\n$body-font-weight    : 300 !default;\n$body-color          : #666 !default;\n$heading-font        : $helvetica !default;\n$heading-font-weight : 500 !default;\n$heading-color       : #111 !default;\n$min-font            : 12px !default;\n$max-font            : 20px !default;\n$min-width           : 600px !default;\n$max-width           : 1140px !default;\n$vertical-rhythm     : true !default;\n\n\n// Helpers\n\n/// A function to remove the unit from a number.\n///\n/// @param {unit} $unit - A unit with a unit value.\n///\n/// @example\n///   _strip-units(1px)\n///\n/// @access private\n\n@function _strip-units($unit) {\n  @return $unit / ($unit * 0 + 1);\n}\n\n\n/// Creates a baseline grid based off your $line-height-ratio to help visualize your vertical rhythm grid. You can offset the grid by negative or positive pixels to line it up perfectly with the bottom of your text.\n///\n/// @param {color} $color [black] - A color to be lightened and used as the color for the grid.\n/// @param {number} $px-offset [false] - A positive or negative number of pixels to offset the grid by. Useful for lining the bottom of the gridlines up with your text.\n///\n/// @example\n///   @include grid-overlay(blue, 2);\n\n@mixin grid-overlay($color: black, $px-offset: false) {\n  body {\n    background: linear-gradient(to top, rgba($color, .1) 5%, white 5%);\n    background-size: 100% ($line-height-ratio) + em;\n    @if($px-offset) {\n      background-position: 0 $px-offset + px;\n    }\n  }\n}\n\n\n/// Returns a \"vertical unit\". Useful for specifying the height and margins of non-text elements like images and such.\n///\n/// @param {number} $units [1] - Number of units. Accepts floated numbers as well.\n/// @param {number} $px-offset [false] - A positive or negative number of pixels to offset the grid by. Useful for lining the bottom of the gridlines up with your text. Since this doesn't compute a literal pixel you may need to use a floated number (multiples of .25 work well) to keep your rhythm on track.\n///\n/// @example\n///   img {\n///     height: vr-block(5.25);\n///     margin-bottom: vr-block(.25);\n///   }\n\n@function vr-block($units: 1, $px-offset: false) {\n  @if($px-offset) {\n    @return ( (($line-height-ratio * _strip-units($max-font)) / (_strip-units($max-font) / 2)) * ($units / 2) * (1 + ($px-offset / _strip-units($max-font))) ) + em;\n  } @else {\n    @return ( (($line-height-ratio * _strip-units($max-font)) / (_strip-units($max-font) / 2)) * ($units / 2) ) + em;\n  }\n}\n\n\n/// Performs exponent math on floated numbers.\n///\n/// @example\n///   math-pow(3, 3)\n///\n/// @access private\n\n@function math-pow($number, $exp) {\n    @if (round($exp) != $exp) {\n      @return math-exp($exp * math-ln($number));\n    }\n\n    $value: 1;\n\n    @if $exp > 0 {\n        @for $i from 1 through $exp {\n           $value: $value * $number;\n        }\n    }\n    @else if $exp < 0 {\n        @for $i from 1 through -$exp {\n            $value: $value / $number;\n        }\n    }\n\n    @return $value;\n}\n\n\n/// Helps with math-pow() function\n///\n/// @access private\n\n@function math-factorial($value) {\n  @if $value == 0 {\n    @return 1;\n  }\n\n  $result: 1;\n\n  @for $index from 1 through $value {\n    $result: $result * $index;\n  }\n\n  @return $result;\n}\n\n\n/// Helps with math-pow() function\n///\n/// @access private\n\n@function math-summation($iteratee, $input, $initial: 0, $limit: 100) {\n  $sum: 0;\n\n  @for $index from $initial to $limit {\n    $sum: $sum + call($iteratee, $input, $index);\n  }\n\n  @return $sum;\n}\n\n\n/// Helps with math-pow() function\n///\n/// @access private\n\n@function math-exp-maclaurin($x, $n) {\n  $result: math-pow($x, $n) / math-factorial($n);\n  @return $result;\n}\n\n\n/// Helps with math-pow() function\n///\n/// @access private\n\n@function math-exp($value) {\n  $result: math-summation(math-exp-maclaurin, $value, 0, 100);\n  @return $result;\n}\n\n\n/// Helps with math-pow() function\n///\n/// @access private\n\n@function math-ln-maclaurin($x, $n) {\n  $result: (math-pow(-1, $n + 1) / $n) * (math-pow($x - 1, $n));\n  @return $result;\n}\n\n\n/// Helps with math-pow() function\n///\n/// @access private\n\n@function math-ln($value) {\n  $ten-exp: 1;\n  $ln-ten: 2.30258509;\n\n  @while ($value > math-pow(10, $ten-exp)) {\n    $ten-exp: $ten-exp + 1;\n  }\n\n  $value: $value / math-pow(10, $ten-exp);\n\n  $result: math-summation(math-ln-maclaurin, $value, 1, 100);\n\n  @return $result + $ten-exp * $ln-ten;\n}\n\n\n// Typography Mixins\n\n@mixin t-html() {\n  font-family: $body-font;\n  font-weight: $body-font-weight;\n  color: $body-color;\n\n  font-size: $min-font;\n  line-height: #{$line-height-ratio}em;\n\n  @media (min-width: $min-width) {\n    font-size: calc( #{$min-font} + (#{_strip-units($max-font)} - #{_strip-units($min-font)}) * ((100vw - #{$min-width}) / (#{_strip-units($max-width)} - #{_strip-units($min-width)})) );\n  }\n\n  @media (min-width: $max-width) {\n    font-size: $max-font;\n  }\n}\n\n@mixin t-p() {\n  @include t-html;\n}\n\n@mixin t-reset() {\n  margin: 0;\n  padding: 0;\n}\n\n@mixin t-block() {\n  margin-bottom: #{$line-height-ratio}em;\n}\n\n@mixin t-heading() {\n  font-family: $heading-font;\n  font-weight: $heading-font-weight;\n  color: $heading-color;\n  clear: both;\n}\n\n@mixin t-h1() {\n  $local-min-font: $min-font * (math-pow($heading-ratio, 1.75));\n  $local-max-font: $max-font * (math-pow($heading-ratio, 1.75));\n\n  font-size: $local-min-font;\n  @if ($vertical-rhythm) {\n    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25)) + em;\n    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5)) + em;\n    margin-bottom: (($line-height-ratio * $min-font) / ($local-min-font / .25)) + em;\n  } @else {\n    margin-top: 0;\n    line-height: 1.1em;\n    margin-bottom: .25em;\n  }\n\n  @media (min-width: $min-width) {\n    font-size: calc( #{$local-min-font} + (#{_strip-units($local-max-font)} - #{_strip-units($local-min-font)}) * ((100vw - #{$min-width}) / (#{_strip-units($max-width)} - #{_strip-units($min-width)})) );\n  }\n\n  @media (min-width: $max-width) {\n    font-size: $local-max-font;\n    @if ($vertical-rhythm) {\n      margin-top: (($line-height-ratio * $max-font) / ($local-max-font / 1.25)) + em;\n      line-height: (($line-height-ratio * $max-font) / ($local-max-font / 1.5)) + em;\n      margin-bottom: (($line-height-ratio * $max-font) / ($local-max-font / .25)) + em;\n    }\n  }\n}\n\n@mixin t-h2() {\n  $local-min-font: $min-font * (math-pow($heading-ratio, 1.4));\n  $local-max-font: $max-font * (math-pow($heading-ratio, 1.4));\n\n  font-size: $local-min-font;\n  @if ($vertical-rhythm) {\n    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25)) + em;\n    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5)) + em;\n    margin-bottom: (($line-height-ratio * _strip-units($min-font)) / (_strip-units($local-min-font) / .25) * (1 + (3 / _strip-units($local-min-font)))) + em;\n  } @else {\n    margin-top: 0;\n    line-height: 1.2em;\n    margin-bottom: .25em;\n  }\n\n  @media (min-width: $min-width) {\n    font-size: calc( #{$local-min-font} + (#{_strip-units($local-max-font)} - #{_strip-units($local-min-font)}) * ((100vw - #{$min-width}) / (#{_strip-units($max-width)} - #{_strip-units($min-width)})) );\n  }\n\n  @media (min-width: $max-width) {\n    font-size: $local-max-font;\n    @if ($vertical-rhythm) {\n      margin-top: (($line-height-ratio * $max-font) / ($local-max-font / 1.25)) + em;\n      line-height: (($line-height-ratio * $max-font) / ($local-max-font / 1.5)) + em;\n      margin-bottom: (($line-height-ratio * _strip-units($max-font)) / (_strip-units($local-max-font) / .25) * (1 + (3 / _strip-units($local-max-font)))) + em;\n    }\n  }\n}\n\n@mixin t-h3() {\n  $local-min-font: $min-font * (math-pow($heading-ratio, 1.05));\n  $local-max-font: $max-font * (math-pow($heading-ratio, 1.05));\n\n  font-size: $local-min-font;\n  @if ($vertical-rhythm) {\n    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25)) + em;\n    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5)) + em;\n    margin-bottom: (($line-height-ratio * _strip-units($min-font)) / (_strip-units($local-min-font) / .25) * (1 + (3 / _strip-units($local-min-font)))) + em;\n  } @else {\n    margin-top: 0;\n    line-height: 1.3em;\n    margin-bottom: .25em;\n  }\n\n  @media (min-width: $min-width) {\n    font-size: calc( #{$local-min-font} + (#{_strip-units($local-max-font)} - #{_strip-units($local-min-font)}) * ((100vw - #{$min-width}) / (#{_strip-units($max-width)} - #{_strip-units($min-width)})) );\n  }\n\n  @media (min-width: $max-width) {\n    font-size: $local-max-font;\n    @if ($vertical-rhythm) {\n      margin-top: (($line-height-ratio * $max-font) / ($local-max-font / 1.25)) + em;\n      line-height: (($line-height-ratio * $max-font) / ($local-max-font / 1.5)) + em;\n      margin-bottom: (($line-height-ratio * _strip-units($max-font)) / (_strip-units($local-max-font) / .25) * (1 + (3 / _strip-units($local-max-font)))) + em;\n    }\n  }\n}\n\n@mixin t-h4() {\n  $local-min-font: $min-font * (math-pow($heading-ratio, .7));\n  $local-max-font: $max-font * (math-pow($heading-ratio, .7));\n\n  font-size: $local-min-font;\n  @if ($vertical-rhythm) {\n    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25)) + em;\n    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5)) + em;\n    margin-bottom: (($line-height-ratio * _strip-units($min-font)) / (_strip-units($local-min-font) / .25) * (1 + (3 / _strip-units($local-min-font)))) + em;\n  } @else {\n    margin-top: 0;\n    line-height: 1.4em;\n    margin-bottom: .25em;\n  }\n\n  @media (min-width: $min-width) {\n    font-size: calc( #{$local-min-font} + (#{_strip-units($local-max-font)} - #{_strip-units($local-min-font)}) * ((100vw - #{$min-width}) / (#{_strip-units($max-width)} - #{_strip-units($min-width)})) );\n  }\n\n  @media (min-width: $max-width) {\n    font-size: $local-max-font;\n    @if ($vertical-rhythm) {\n      margin-top: (($line-height-ratio * $max-font) / ($local-max-font / 1.25)) + em;\n      line-height: (($line-height-ratio * $max-font) / ($local-max-font / 1.5)) + em;\n      margin-bottom: (($line-height-ratio * _strip-units($max-font)) / (_strip-units($local-max-font) / .25) * (1 + (3 / _strip-units($local-max-font)))) + em;\n    }\n  }\n}\n\n@mixin t-h5() {\n  $local-min-font: $min-font * (math-pow($heading-ratio, .35));\n  $local-max-font: $max-font * (math-pow($heading-ratio, .35));\n\n  font-size: $local-min-font;\n  @if ($vertical-rhythm) {\n    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25)) + em;\n    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5)) + em;\n    margin-bottom: (($line-height-ratio * $min-font) / ($local-min-font / .25)) + em;\n  } @else {\n    margin-top: 0;\n    line-height: 1.5em;\n    margin-bottom: .25em;\n  }\n\n  @media (min-width: $min-width) {\n    font-size: calc( #{$local-min-font} + (#{_strip-units($local-max-font)} - #{_strip-units($local-min-font)}) * ((100vw - #{$min-width}) / (#{_strip-units($max-width)} - #{_strip-units($min-width)})) );\n  }\n\n  @media (min-width: $max-width) {\n    font-size: $local-max-font;\n    @if ($vertical-rhythm) {\n      margin-top: (($line-height-ratio * $max-font) / ($local-max-font / 1.25)) + em;\n      line-height: (($line-height-ratio * $max-font) / ($local-max-font / 1.5)) + em;\n      margin-bottom: (($line-height-ratio * $max-font) / ($local-max-font / .25)) + em;\n    }\n  }\n}\n\n@mixin t-h6() {\n  $local-min-font: $min-font;\n  $local-max-font: $max-font;\n\n  font-size: $local-min-font;\n  @if ($vertical-rhythm) {\n    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25)) + em;\n    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5)) + em;\n    margin-bottom: (($line-height-ratio * _strip-units($min-font)) / (_strip-units($local-min-font) / .25) * (1 + (2 / _strip-units($local-min-font)))) + em;\n  } @else {\n    margin-top: 0;\n    line-height: 1.6em;\n    margin-bottom: .25em;\n  }\n\n  @media (min-width: $min-width) {\n    font-size: calc( #{$local-min-font} + (#{_strip-units($local-max-font)} - #{_strip-units($local-min-font)}) * ((100vw - #{$min-width}) / (#{_strip-units($max-width)} - #{_strip-units($min-width)})) );\n  }\n\n  @media (min-width: $max-width) {\n    font-size: $local-max-font;\n    @if ($vertical-rhythm) {\n      margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25)) + em;\n      line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5)) + em;\n      margin-bottom: (($line-height-ratio * _strip-units($min-font)) / (_strip-units($local-min-font) / .25) * (1 + (1 / _strip-units($local-min-font)))) + em;\n    }\n  }\n}\n\n@mixin t-blockquote() {\n  font-style: italic;\n  cite {\n    display: block;\n    font-style: normal;\n  }\n}\n\n@mixin t-pre() {\n  padding: ($line-height-ratio * .5) + em;\n  margin-bottom: vr-block(1);\n  code {\n    padding: 0;\n  }\n}\n\n@mixin t-code() {\n  font-family: $courier;\n  padding: ($line-height-ratio * .05) + em ($line-height-ratio * .15) + em;\n  line-height: 0;\n}\n\n@mixin t-abbr() {\n  border-bottom: 1px dotted currentColor;\n  cursor: help;\n}\n\n@mixin t-dt() {\n  color: $heading-color;\n  font-weight: bold;\n}\n\n@mixin t-fieldset() {\n  padding: vr-block(.5) vr-block() vr-block();\n  border-width: 1px;\n  border-style: solid;\n  max-width: 100%;\n  margin-bottom: vr-block(1, 1);\n  @media (min-width: $max-width) {\n    margin-bottom: vr-block(1.25, -1);\n  }\n  button, input[type=\"submit\"] {\n    margin-bottom: 0;\n  }\n}\n\n@mixin t-legend() {\n  color: $heading-color;\n  font-weight: bold;\n}\n\n@mixin t-input() {\n  $local-min-font: $min-font;\n  $local-max-font: $max-font;\n\n  display: block;\n  max-width: 100%;\n  padding: vr-block(.25);\n\n  font-size: $local-min-font;\n  margin-bottom: vr-block(.5, 7);\n\n  @media (min-width: $min-width) {\n    font-size: calc( #{$local-min-font} + (#{_strip-units($local-max-font)} - #{_strip-units($local-min-font)}) * ((100vw - #{$min-width}) / (#{_strip-units($max-width)} - #{_strip-units($min-width)})) );\n  }\n\n  @media (min-width: $max-width) {\n    font-size: $local-max-font;\n    margin-bottom: vr-block(.25, 3.5);\n  }\n}\n\n@mixin t-button() {\n  $local-min-font: $min-font;\n  $local-max-font: $max-font;\n\n  display: block;\n  cursor: pointer;\n\n  font-size: $local-min-font;\n  padding: vr-block(.25) vr-block();\n  margin-bottom: vr-block(.75, -2);\n\n  @media (min-width: $min-width) {\n    font-size: calc( #{$local-min-font} + (#{_strip-units($local-max-font)} - #{_strip-units($local-min-font)}) * ((100vw - #{$min-width}) / (#{_strip-units($max-width)} - #{_strip-units($min-width)})) );\n  }\n\n  @media (min-width: $max-width) {\n    font-size: $local-max-font;\n    margin-bottom: vr-block(.75);\n  }\n}\n\n@mixin t-label() {\n  display: block;\n  padding-bottom: vr-block(.125);\n  margin-bottom: vr-block(-.25, -10);\n}\n\n@mixin t-table() {\n  width: 100%;\n  border-spacing: 0;\n  border-collapse: collapse;\n  margin-bottom: vr-block(1, 5);\n  @media (min-width: $max-width) {\n    margin-bottom: vr-block(1, 3);\n  }\n}\n\n@mixin t-th() {\n  text-align: left;\n  color: $heading-color;\n\n  padding: vr-block(.125) vr-block(.5);\n\n  @media (min-width: $max-width) {\n    padding: vr-block(.25) vr-block(.5);\n  }\n}\n\n@mixin t-td() {\n  padding: ($line-height-ratio * .5) + em;\n  padding: vr-block(.125) vr-block(.5);\n\n  @media (min-width: $max-width) {\n    padding: vr-block(.25) vr-block(.5);\n  }\n}\n\n\n/// The Typographic Reset. This is where Typographic goes through every markup element and styles it to adhere to a vertical rhythm. After you set your variables in a settings file fire this mixin.\n///\n/// @example\n///   @include typographic;\n\n@mixin typographic() {\n\n  html {\n    @include t-html;\n  }\n\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td {\n    @include t-reset;\n  }\n\n  p, blockquote, pre,\n  address,\n  dl, ol, ul,\n  table {\n    @include t-block;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    @include t-heading;\n  }\n\n  h1 {\n    @include t-h1;\n  }\n\n  h2 {\n    @include t-h2;\n  }\n\n  h3 {\n    @include t-h3;\n  }\n\n  h4 {\n    @include t-h4;\n  }\n\n  h5 {\n    @include t-h5;\n  }\n\n  h6 {\n    @include t-h6;\n  }\n\n  blockquote {\n    @include t-blockquote;\n  }\n\n  pre {\n    @include t-pre;\n  }\n\n  code {\n    @include t-code;\n  }\n\n  big, small, sub, sup {\n    line-height: 0;\n  }\n\n  abbr, acronym {\n    @include t-abbr;\n  }\n\n  address {\n    font-style: normal;\n  }\n\n  dt {\n    @include t-dt;\n  }\n\n  ul {\n    padding-left: 1.1em;\n  }\n\n  ol {\n    padding-left: 1.4em;\n  }\n\n  fieldset {\n    @include t-fieldset;\n  }\n\n  legend {\n    @include t-legend;\n  }\n\n  input[type=\"text\"], input[type=\"email\"], input[type=\"password\"], textarea {\n    @include t-input;\n  }\n\n  input[type=\"submit\"], button {\n    @include t-button;\n  }\n\n  label {\n    @include t-label;\n  }\n\n  table {\n    @include t-table;\n  }\n\n  th {\n    @include t-th;\n  }\n\n  td {\n    @include t-td;\n  }\n\n}\n\n@include typographic()\n",".admin-menu ul {\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  background: #7B7B7B;\n  border-bottom: 2px solid #4C4C4C;\n  li {\n    display: inline-block;\n    font-size: 15px;\n    padding: 0 15px;\n    a {\n      color: #FFF;\n      &:focus, &:hover {\n        color: #FFF;\n      }\n    }\n  }\n}\n",".header {\n  @include span(12 of 12 no-gutter);\n  display: block;\n  max-height: 386px;\n  line-height: 0;\n  overflow: hidden;\n  position: relative;\n  border-bottom: 9px solid #dfdfdf;\n  margin-bottom: 70px;\n  img {\n    width: 100%;\n    height: auto;\n  }\n  .text {\n    position: absolute;\n    bottom: 7%;\n    color: #FFF;\n    line-height: 1;\n    left: 0;\n    font-family: 'NuevaStd-Italic';\n    font-style: italic;\n    font-size: 15px;\n    h2 {\n      color: #FFF;\n      font-family: 'NuevaStd-Italic';\n      font-style: italic;\n    }\n  }\n}\n","// Span Syntax\n// ===========\n\n// Span [mixin]\n// ------------\n// Set a spanning element using shorthand syntax.\n// - $span  : <span>\n@mixin span(\n  $span\n) {\n  $inspect: $span;\n  $span: parse-span($span);\n  $output: span-math($span);\n  $nesting: susy-get(span, $span);\n  $clear: susy-get(clear, $span);\n\n  $box: susy-get(box-sizing, $span);\n  $content-box: if(susy-get(global-box-sizing) != 'border-box', true, false);\n  $box: $box or if(is-inside($span) and $content-box, border-box, null);\n\n  @if $clear == break {\n    @include break;\n  } @else if $clear == nobreak {\n    @include nobreak;\n  }\n\n  @include susy-inspect(span, $inspect);\n  @include output((box-sizing: $box));\n  @include float-span-output($output...);\n\n  @if valid-columns($nesting, silent) {\n    @include nested($span) { @content; }\n  } @else {\n    @content;\n  }\n}\n\n// Span [function]\n// ---------------\n// Return the width of a span.\n// - $span  : <span>\n@function span(\n  $span\n) {\n  @return get-span-width($span);\n}\n\n// Span Math\n// ---------\n// Get all the span results.\n// - $span: <map>\n@function span-math(\n  $span\n) {\n  $nest             : if(susy-get(role, $span) == nest, true, false);\n  $split-nest       : if(is-split($span) and $nest, true, false);\n  $edge             : get-edge($span);\n  $location         : get-location($span);\n\n  $float            : from;\n  $padding-before   : null;\n  $padding-after    : null;\n  $margin-before    : null;\n  $margin-after     : null;\n\n  // calculate widths\n  $spread: index(map-values($span), spread);\n  $span: if($split-nest and not($spread), map-merge($span, (spread: wide)), $span);\n  $width: get-span-width($span);\n  $gutters: get-gutters($span);\n\n  // apply gutters\n  @if is-inside($span) {\n    @if not(susy-get(role, $span)) {\n      $padding-before: map-get($gutters, before);\n      $padding-after: map-get($gutters, after);\n    }\n  } @else {\n    @if not($split-nest) {\n      $margin-before: map-get($gutters, before);\n      $margin-after: map-get($gutters, after);\n    }\n  }\n\n  // special margin handling\n  @if susy-get(output, $span) == isolate and $location {\n    $margin-before: get-isolation($span);\n    $margin-after: -100%;\n  } @else if $edge {\n    $is-split: is-split($span);\n    $pos: susy-get(gutter-position, $span);\n\n    @if $edge == last {\n      $float: susy-get(last-flow, $span);\n    }\n\n    @if not($is-split) {\n      @if $edge == full or ($edge == first and $pos == before) {\n        $margin-before: 0;\n      }\n      @if $edge == full or ($edge == last and $pos == after) {\n        $margin-after: 0;\n      }\n    }\n\n  }\n\n  @return (\n    width           : $width,\n    float           : $float,\n    margin-before   : $margin-before,\n    margin-after    : $margin-after,\n    padding-before  : $padding-before,\n    padding-after   : $padding-after,\n    flow            : susy-get(flow, $span),\n  );\n}\n\n// Get Span Width\n// --------------\n// Return span width.\n// - $span: <map>\n@function get-span-width(\n  $span\n) {\n  $span     : parse-span($span);\n\n  $n        : susy-get(span, $span);\n  $location : get-location($span);\n  $columns  : susy-get(columns, $span);\n  $gutters  : susy-get(gutters, $span);\n  $spread   : susy-get(spread, $span);\n\n  $context  : null;\n  $span-sum : null;\n  $width    : null;\n\n  @if $n == 'full' {\n    $pos: susy-get(gutter-position, $span);\n    $role: susy-get(role, $span);\n    $n: if($pos == split and $role != nest, susy-count($columns), 100%);\n  }\n\n  @if type-of($n) != number {\n    @warn \"(#{type-of($n)}) #{$n} is not a valid span.\";\n  } @else if unitless($n) {\n    $context: susy-sum($columns, $gutters, if(is-split($span), wide, narrow));\n    $spread: if(is-inside($span), $spread or wide, $spread);\n    $span-sum: susy($n, $location, $columns, $gutters, $spread);\n\n    $_math: susy-get(math, $span);\n    $_column-width: susy-get(column-width, $span);\n    @if $_math == static {\n      $width: $span-sum * valid-column-math($_math, $_column-width);\n    } @else {\n      $width: percentage($span-sum / $context);\n    }\n  } @else {\n    $width: $n;\n  }\n\n  @return $width;\n}\n","// Direction Helpers\n// =================\n\n// Susy Flow Defaults\n// ------------------\n// - PRIVATE\n@include susy-defaults((\n  flow: ltr,\n));\n\n// Get Direction\n// -------------\n// Return the 'from' or 'to' direction of a ltr or rtl flow.\n// - [$flow]  : ltr | rtl\n// - [$key]   : from | to\n@function get-direction(\n  $flow: map-get($susy-defaults, flow),\n  $key: from\n) {\n  $return: if($flow == rtl, (from: right, to: left), (from: left, to: right));\n  @return map-get($return, $key);\n}\n\n// To\n// --\n// Return the 'to' direction of a flow\n// - [$flow]  : ltr | rtl\n@function to(\n  $flow: map-get($susy-defaults, flow)\n) {\n  @return get-direction($flow, to);\n}\n\n// From\n// ----\n// Return the 'from' direction of a flow\n// - [$flow]  : ltr | rtl\n@function from(\n  $flow: map-get($susy-defaults, flow)\n) {\n  @return get-direction($flow, from);\n}\n",".carousel {\n  overflow: hidden;\n  margin-bottom: 70px;\n  .slide-item {\n    @include span(4 of 6 no-gutter);\n    @include breakpoint($tablet) {\n      @include span(3 of 12);\n    }\n    a {\n      display: block;\n    }\n    img {\n      max-width: 100%;\n      height: auto;\n    }\n  }\n  .slick-arrow{\n    width: 5%;\n    float: left;\n    border: none;\n    text-indent:-9999px;\n    margin: 0;\n    padding: 0;\n  }\n  .slick-next {\n    background: url('../images/next.jpg') no-repeat 50% 50%;\n  }\n  .slick-prev {\n    background: url('../images/prev.jpg') no-repeat 50% 50%;\n  }\n  .slick-list {\n    width: 90%;\n    float: left;\n  }\n}\n","// Gutter Syntax\n// =============\n\n\n// Gutters\n// -------\n// Set gutters on an element.\n// - [$span]   : <settings>\n@mixin gutters(\n  $span: $susy\n) {\n  $inspect  : $span;\n  $span     : parse-gutters($span);\n  $_gutters : get-gutters($span);\n\n  $_output: (\n    before: map-get($_gutters, before),\n    after: map-get($_gutters, after),\n    flow: susy-get(flow, $span),\n  );\n\n  @include susy-inspect(gutters, $inspect);\n\n  @if is-inside($span) {\n    @include padding-output($_output...);\n  } @else {\n    @include margin-output($_output...);\n  }\n}\n\n@mixin gutter(\n  $span: $susy\n) {\n  @include gutters($span);\n}\n\n\n// Gutter\n// ------\n// Return the width of a gutter.\n// - [$span]   : <settings>\n@function gutter(\n  $span: $susy\n) {\n  $span: parse-gutters($span);\n\n  $_gutters: get-gutters($span);\n  $_gutters: map-get($_gutters, before) or map-get($_gutters, after);\n\n  @return $_gutters;\n}\n\n@function gutters(\n  $span: $susy\n) {\n  @return gutter($span);\n}\n\n\n// Get Gutter Width\n// ----------------\n// Return gutter width.\n// - [$context]: <context>\n@function get-gutter-width(\n  $context: $susy\n) {\n  $context  : parse-gutters($context);\n\n  $_gutters : susy-get(gutters, $context);\n  $_gutter  : susy-get(gutter-override, $context);\n\n  @if $_gutters and ($_gutters > 0) and not($_gutter) {\n    $_column-width: susy-get(column-width, $context);\n    $_math: gutter-math($context);\n    @if $_math == static {\n      $_gutter: $_gutters * valid-column-math($_math, $_column-width);\n    } @else {\n      $_columns : susy-get(columns, $context);\n      $_spread  : if(is-split($context), wide, susy-get(spread, $context));\n      $_gutter  : percentage($_gutters / susy-sum($_columns, $_gutters, $_spread));\n    }\n  }\n\n  $_gutter: if($_gutter == 'no-gutters' or $_gutter == 'no-gutter', null, $_gutter);\n\n  @return $_gutter;\n}\n\n\n// Get Gutters\n// -----------\n// Return before and after gutter values.\n// - [$context]: <context>\n@function get-gutters(\n  $context: $susy\n) {\n  $context            : parse-gutters($context);\n\n  $_gutter-position   : susy-get(gutter-position, $context);\n  $_gutter            : get-gutter-width($context);\n\n  $_return            : (before: null, after: null);\n\n  @if is-split($context) and $_gutter {\n    $_gutter: $_gutter / 2;\n    $_return: map-merge($_return, (before: $_gutter, after: $_gutter));\n  } @else {\n    $_return: map-merge($_return, ($_gutter-position: $_gutter));\n  }\n\n  @return $_return;\n}\n\n\n// Is Inside\n// ---------\n// Returns true if gutters are inside.\n// $context: <context>\n@function is-inside(\n  $context\n) {\n  $_inside: inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_inside, $_gutter-position), true, false);\n}\n\n\n// Is Split\n// --------\n// Returns true if gutters are split.\n// $context: <context>\n@function is-split(\n  $context\n) {\n  $_split: split inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_split, $_gutter-position), true, false);\n}\n\n\n// Gutter Math\n// -----------\n// Return the math to use for gutter calculations\n// $context: <context>\n@function gutter-math(\n  $context: $susy\n) {\n  $_return  : susy-get(math, $context);\n  $_return  : if(susy-get(gutter-position, $context) == inside-static, static, $_return);\n\n  @return $_return;\n}\n",".isa_info, .isa_success, .isa_warning, .isa_error {\n  //margin: 10px 0px;\n  //padding:12px;\n}\n.isa_info {\n  color: #00529B;\n  background-color: #BDE5F8;\n}\n.isa_success {\n  color: #4F8A10;\n  background-color: #DFF2BF;\n}\n.isa_warning {\n  color: #9F6000;\n  background-color: #FEEFB3;\n}\n.isa_error {\n  color: #D8000C;\n  background-color: #FFBABA;\n}\n.isa_info i, .isa_success i, .isa_warning i, .isa_error i {\n  margin:10px 22px;\n  font-size:2em;\n  vertical-align:middle;\n}\n",".videoWrapper {\n\tposition: relative;\n\tpadding-bottom: 56.25%; /* 16:9 */\n\tpadding-top: 25px;\n\theight: 0;\n\n  iframe {\n  \tposition: absolute;\n  \ttop: 0;\n  \tleft: 0;\n  \twidth: 100%;\n  \theight: 100%;\n  }\n}\n","//http://w3bits.com/css-masonry/\n\n.lt-ie9 .work-wrapper .grid-item {\n  @include span(6 of 6 no-gutter);\n  @include breakpoint($tablet) {\n    @include span(6 of 12 no-gutter);\n  }\n  @include breakpoint($desktop) {\n    @include span(3 of 12 no-gutter);\n  }\n}\n\n.masonry {\n  -webkit-column-count: 1;\n  -moz-column-count: 1;\n  column-count: 1;\n  -webkit-column-gap: 1em;\n  -moz-column-gap: 1em;\n  column-gap: 1em;\n  position: relative;\n  @include breakpoint($tablet) {\n    -webkit-column-count: 2;\n    -moz-column-count: 2;\n    column-count: 2;\n  }\n  @include breakpoint($desktop) {\n    -webkit-column-count:4;\n    -moz-column-count: 4;\n    column-count: 4;\n  }\n}\n\n.work-wrapper {\n  padding: 0 2%;\n  overflow: hidden;\n  a.grid-item {\n    display: inline-block;\n    //margin: 0 0 1em;\n    position: relative;\n    width: 100%;\n    line-height: 0;\n    -webkit-column-break-inside: avoid;\n    -webkit-backface-visibility: hidden;\n    overflow: hidden;\n\n    .background {\n      background-color: #000;\n      opacity: 0;\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      z-index: 100;\n    }\n    .text-wrapper {\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n      text-align: center;\n      left: 0;\n      right: 0;\n      z-index: 101;\n      opacity: 0;\n      h3 {\n        color: #FFF;\n        padding: 0;\n        margin: 0;\n      }\n      i {\n        font-size: 0;\n        color: #FFF;\n        backface-visibility: hidden;\n        transform: translateZ(0);\n      }\n    }\n    img {\n      width: 100%;\n      height: auto;\n      backface-visibility: hidden;\n      transform: translateZ(0);\n    }\n  }\n}\n",".about-icon {\n  text-align: center;\n}\nh3.section-title {\n  text-align: center;\n  overflow: hidden;\n  color: #0aaab4;\n  margin: 0 0 20px 0;\n  span {\n    display: inline-block;\n    position: relative;\n    &:before, &:after {\n      content: \"\";\n      position: absolute;\n      line-height: 31px;\n      border-bottom: 1px solid #cdcdcd;\n      top: 50%;\n      width: 600px;\n    }\n    &:before {\n      right: 100%;\n      margin-right: 50%;\n      @include breakpoint($tablet) {\n        margin-right: 100%;\n      }\n      @include breakpoint($desktop) {\n        margin-right: 150%;\n      }\n    }\n    &:after {\n      left: 100%;\n      margin-left: 50%;\n      @include breakpoint($tablet) {\n        margin-left: 100%;\n      }\n      @include breakpoint($desktop) {\n        margin-left: 150%;\n      }\n    }\n  }\n}\n.skills-image {\n  max-width: 100%;\n  height: auto;\n  margin: 0 auto;\n  display: block;\n}\n.recent-work {\n  margin-top: 70px;\n  text-align: center;\n}\n",".left {\n  @include span(6 of 6 no-gutter);\n  @include breakpoint($tablet) {\n    @include span(6 of 12);\n  }\n  @include breakpoint($desktop) {\n    @include span(4 of 12);\n  }\n}\n.right {\n  @include span(6 of 6 no-gutter);\n  @include breakpoint($tablet) {\n    @include span(6 of 12 no-gutter);\n  }\n  @include breakpoint($desktop) {\n    @include span(8 of 12 no-gutter);\n  }\n  img {\n    display: block;\n  }\n  > * {\n    margin-bottom: 20px;\n  }\n}\n",".one-column {\n  form#contact-form {\n    @include span(6 of 6);\n    @include breakpoint($tablet) {\n      @include span(8 of 12);\n    }\n    @include breakpoint($desktop) {\n      @include span(6 of 12);\n    }\n  }\n}\n.two-column {\n  .text {\n    @include span(6 of 6 no-gutter);\n    @include breakpoint($tablet) {\n      @include span(6 of 12);\n    }\n    @include breakpoint($desktop) {\n      @include span(4 of 12);\n    }\n  }\n  form#contact-form  {\n    @include span(6 of 6 no-gutter);\n    @include breakpoint($tablet) {\n      @include span(6 of 12 no-gutter);\n    }\n    @include breakpoint($desktop) {\n      @include span(8 of 12 no-gutter);\n    }\n  }\n}\nform#contact-form {\n  input[type=\"text\"], textarea {\n    width: 100%;\n    box-sizing: border-box;\n  }\n  textarea {\n    height: 150px;\n  }\n  input[type=\"text\"] {\n    padding-left: 50px;\n  }\n  i {\n    position: absolute;\n    left: 10px;\n    top: 6px;\n    font-size: 30px;\n    color: #cdcdcd;\n  }\n}\n\n#contact-form input[type=\"submit\"] {\n  margin-top: 0.5140625em;\n}\n","header {\n  width: 96% !important;\n  margin: 0 2%;\n  background: #FFF;\n  position: relative;\n  backface-visibility: hidden;\n  transform: translateZ(0);\n  > nav {\n    display: none;\n    @include breakpoint($tablet) {\n      display: block;\n    }\n  }\n  .border {\n    -webkit-transition: background 0.2s linear;\n    transition: background 0.2s linear;\n    background: #FFF;\n    clear: both;\n    margin: 0 -2% 0 -2%;\n    height: 9px;\n  }\n  .background {\n    position: absolute;\n    top: 0;\n    left: -3%;\n    bottom: 0;\n    right: -3%;\n    background: #FFF;\n    z-index: -1;\n  }\n  a.logo {\n    line-height: 0;\n    width: 240px;\n    display: block;\n    float: left;\n    @include breakpoint($tablet) {\n      float: none;\n      @include span(6 of 12);\n    }\n    @include breakpoint($desktop) {\n      @include span(3 of 12);\n    }\n    img {\n      width: 100%;\n      height: auto;\n      -webkit-transition: width .2s;\n      transition: width .2s;\n    }\n  }\n  > nav {\n    ul {\n      margin: 0;\n      padding: 0;\n      list-style: none;\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n      right: 0;\n      li {\n        display: inline;\n        padding-left: 25px;\n        &:first-child {\n          padding-left: 0;\n        }\n        a {\n          border-bottom: 2px solid transparent;\n          text-decoration: none;\n          color: #575656;\n          padding: 0 5px;\n          &:active, &:focus, &:hover {\n            color: #575656;\n            border-bottom-color: #c21924;\n          }\n        }\n      }\n    }\n    @include span(9 of 12 last);\n  }\n}\n#header-sticky-wrapper {\n  display: block;\n  z-index: 200;\n  position: relative;\n  &.is-sticky {\n    img {\n      @include breakpoint($tablet) {\n        width: 60%;\n      }\n    }\n    header {\n      .border {\n        background: #dfdfdf;\n      }\n    }\n  }\n}\n.is-sticky .slicknav_menu .slicknav_btn.open .slicknav_icon-bar:nth-child(2) {\n  margin-bottom: -5px;\n}\n.slicknav_menu {\n  background: transparent;\n  .slicknav_icon {\n    float: none;\n  }\n  ul {\n    margin: 0;\n    li a {\n      color: #575656;\n      border-bottom: 2px solid transparent;\n      &:focus, &:hover {\n        -webkit-border-radius: 0;\n        -moz-border-radius: 0;\n        border-radius: 0;\n        background: transparent;\n        color: #575656;\n        border-bottom-color: #c21924;\n      }\n    }\n  }\n  .slicknav_btn {\n    background: transparent;\n    margin: 0;\n    text-decoration: none;\n    text-shadow: none;\n    -webkit-border-radius: 0;\n    -moz-border-radius: 0;\n    border-radius: 0;\n    font-size: 2em;\n  }\n  .slicknav_icon-bar {\n    display: block;\n    margin-bottom: 6px;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n    box-shadow: none;\n    width: 40px;\n    height: 6px;\n    -webkit-border-radius: 3px;\n    -moz-border-radius: 3px;\n    -ms-border-radius: 3px;\n    border-radius: 3px;\n    margin-bottom: 8px;\n    background: #575656;\n  }\n  .slicknav_btn.open {\n    .slicknav_icon-bar:first-child {\n      visibility: hidden;\n    }\n    .slicknav_icon-bar:nth-child(2) {\n      display: block;\n      -moz-transform: rotate(45deg);\n      -o-transform: rotate(45deg);\n      -ms-transform: rotate(45deg);\n      -webkit-transform: rotate(45deg);\n      transform: rotate(45deg);\n      margin-bottom: -6px;\n    }\n    .slicknav_icon-bar:nth-child(3) {\n      display: block;\n      -moz-transform: rotate(-45deg);\n      -o-transform: rotate(-45deg);\n      -ms-transform: rotate(-45deg);\n      -webkit-transform: rotate(-45deg);\n      transform: rotate(-45deg);\n      margin-top: 0;\n    }\n  }\n  .js #menu {\n\t\tdisplay:none;\n\t}\n\t.js .slicknav_menu {\n\t\tdisplay:block;\n\t}\n  @include breakpoint($tablet) {\n    display:none;\n  }\n}\n","footer {\n  background: #dfdfdf;\n  text-align: center;\n  border-top: 9px solid #bebebe;\n  color: #575656;\n  padding: 62px 0;\n}\n"],"sourceRoot":"/source/"}