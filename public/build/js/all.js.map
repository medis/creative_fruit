{"version":3,"sources":["dropzone.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"all.js","sourcesContent":["Dropzone.autoDiscover = false;\n\n$(function() {\n    var uploaded_files = [];\n    var baseUrl = \"/fileentry\";\n    var token = $('.token').val();\n    var myDropzone = new Dropzone(\"div#upload-widget\", {\n        url: baseUrl+\"/upload\",\n        addRemoveLinks: true,\n        params: {\n            _token: token\n        },\n        removedfile: function(file) {\n            for (var i=0; i < uploaded_files.length; i++) {\n                if (uploaded_files[i].name == file.name) {\n                    var id = uploaded_files[i].id;\n                    $.ajax({\n                        type: 'POST',\n                        url: baseUrl + '/delete',\n                        data: {id: id, _token: token},\n                        indexValue: i,\n                        dataType: 'html',\n                        success: function(data){\n                            uploaded_files.splice(this.indexValue, 1);\n                            genereateFilesList();\n                        }\n                    });\n                }\n            }\n            var _ref;\n            return (_ref = file.previewElement) != null ? _ref.parentNode.removeChild(file.previewElement) : void 0;\n        },\n        success: function(file, response){\n            uploaded_files.push({\n                id: response.id,\n                name: file.name\n            });\n            genereateFilesList();\n        }\n    });\n    Dropzone.options.uploadWidget = {\n        paramName: \"file\", // The name that will be used to transfer the file\n        maxFilesize: 10, // MB\n        accept: function(file, done) {\n        },\n    };\n\n    // files variable is set from server side.\n    if (uploaded_files.length == 0 && files.length) {\n        for (var i=0; i < files.length; i++) {\n            // Create the mock file:\n            var mockFile = { name: files[i].filename, size: files[i].size };\n            // Call the default addedfile event handler\n            myDropzone.emit(\"addedfile\", mockFile);\n            // And optionally show the thumbnail of the file:\n            //myDropzone.emit(\"thumbnail\", mockFile, files[i].url);\n            myDropzone.createThumbnailFromUrl(mockFile, files[i].url);\n            // Make sure that there is no progress bar, etc...\n            myDropzone.emit(\"complete\", mockFile);\n\n            uploaded_files.push({\n                id: files[i].id,\n                name: files[i].filename\n            });\n            genereateFilesList();\n        }\n    }\n\n    function genereateFilesList() {\n        var list = [];\n        for (var i=0; i < uploaded_files.length; i++) {\n            list.push(uploaded_files[i].id);\n        }\n        $('input[name=\"files\"]').val(list.join());\n    }\n})\n"],"sourceRoot":"/source/"}